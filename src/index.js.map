{"mappings":"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","sources":["src/public/js/index.js","src/public/js/login.js","src/public/js/alerts.js","src/public/js/mapbox.js","src/public/js/updateSettings.js","src/public/js/stripe.js","src/public/js/signup.js"],"sourcesContent":["import 'core-js/stable';\nimport { login, logout } from './login';\nimport { displayMap } from './mapbox';\nimport { updateSettings } from './updateSettings';\nimport { bookTour } from './stripe';\nimport { signup } from './signup';\n\n// DOM ELEMENTS\nconst mapBox = document.getElementById('map');\nconst loginForm = document.querySelector('.form--login');\nconst logOutBtn = document.querySelector('.nav__el--logout');\nconst userDataForm = document.querySelector('.form-user-data');\nconst userPasswordForm = document.querySelector('.form-user-password');\nconst bookBtn = document.getElementById('book-tour');\nconst signupForm = document.querySelector('.form--signup');\n\nif (mapBox) {\n  const locations = JSON.parse(mapBox.dataset.locations);\n  displayMap(locations);\n}\n\nif (loginForm)\n  loginForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    login(email, password);\n  });\n\nif (logOutBtn) logOutBtn.addEventListener('click', logout);\n\nif (userDataForm)\n  userDataForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const form = new FormData();\n    form.append('name', document.getElementById('name').value);\n    form.append('email', document.getElementById('email').value);\n    form.append(\n      'photo',\n\n      // @ts-ignore\n      document.getElementById('photo').files[0]\n    );\n\n    updateSettings(form, 'data');\n  });\n\nif (userPasswordForm)\n  userPasswordForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    const btn = document.querySelector('.btn--save-password');\n    const fieldCurrentPassword = document.getElementById('password-current');\n    const fieldPassword = document.getElementById('password');\n    const fieldPasswordConfirm = document.getElementById('password-confirm');\n\n    btn.textContent = 'Updating...';\n    const passwordCurrent = fieldCurrentPassword.value;\n    const password = fieldPassword.value;\n    const passwordConfirm = fieldPasswordConfirm.value;\n\n    await updateSettings(\n      { passwordCurrent, password, passwordConfirm },\n      'password'\n    );\n\n    btn.textContent = 'Save password';\n    fieldCurrentPassword.value = '';\n    fieldPassword.value = '';\n    fieldPasswordConfirm.value = '';\n  });\n\nif (bookBtn) {\n  bookBtn.addEventListener('click', (e) => {\n    // @ts-ignore\n    e.target.textContent = 'Processing...';\n    // @ts-ignore\n    e.target.disabled = true;\n    // @ts-ignore\n    const { tourId } = e.target.dataset;\n    bookTour(tourId);\n  });\n}\n\nif (signupForm)\n  signupForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    const name = document.getElementById('name').value;\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('passwordConfi.').value;\n\n    const btn = document.querySelector('.btn');\n    btn.textContent = 'Signing up...';\n    // @ts-ignore\n    btn.disabled = true;\n    await signup(name, email, password, passwordConfirm);\n  });\n","import axios from 'axios';\nimport { showAlert } from './alerts';\n\nexport const login = async (email, password) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      url: '/api/v1/users/login',\n      data: {\n        email,\n        password,\n      },\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', 'Logged in successfully!');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1500);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n\nexport const logout = async () => {\n  try {\n    const res = await axios({\n      method: 'GET',\n      url: '/api/v1/users/logout',\n    });\n\n    if (res.data.status === 'success') location.assign('/');\n  } catch (err) {\n    console.log(err.response);\n    showAlert('error', 'Error logging out! Try again.');\n  }\n};\n","export const hideAlert = () => {\n  const el = document.querySelector('.alert');\n  if (el) el.parentElement.removeChild(el);\n};\n\nexport const showAlert = (type, msg) => {\n  hideAlert();\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n  window.setTimeout(hideAlert, 5000);\n};\n","import mapboxgl from 'mapbox-gl';\n\nexport const displayMap = (locations) => {\n  mapboxgl.accessToken =\n    'pk.eyJ1IjoiZG9zYW5qb3NndXN0YXZvIiwiYSI6ImNsbHBmbm15NTA1NWIza2xpMWo4bDlwcTIifQ.vPBJ5o4Txtu9VMAUIjggcQ';\n\n  var map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/dosanjosgustavo/cllv02m31012101qx0uq49ct5',\n    scrollZoom: false,\n  });\n\n  const bounds = new mapboxgl.LngLatBounds();\n\n  locations.forEach((loc) => {\n    const element = document.createElement('div');\n    element.className = 'marker';\n\n    new mapboxgl.Marker({\n      element,\n      anchor: 'bottom',\n    })\n      .setLngLat(loc.coordinates)\n      .addTo(map);\n\n    new mapboxgl.Popup({\n      offset: 30,\n    })\n      .setLngLat(loc.coordinates)\n      .setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`)\n      .addTo(map);\n\n    bounds.extend(loc.coordinates);\n  });\n\n  map.fitBounds(bounds, {\n    padding: {\n      top: 200,\n      bottom: 150,\n      left: 100,\n      right: 100,\n    },\n  });\n};\n","import axios from 'axios';\nimport { showAlert } from './alerts';\n\n// type is either 'password' or 'data'\nexport const updateSettings = async (data, type) => {\n  try {\n    const url =\n      type === 'password'\n        ? '/api/v1/users/updateMyPassword'\n        : '/api/v1/users/updateMe';\n\n    const res = await axios({\n      method: 'PATCH',\n      url,\n      data,\n    });\n\n    const typeCapitalized = type.charAt(0).toUpperCase() + type.slice(1);\n\n    if (res.data.status === 'success') {\n      showAlert('success', `${typeCapitalized} updated successfully!`);\n      window.setTimeout(() => {\n        location.reload();\n      }, 1500);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n","import { showAlert } from './alerts';\nimport axios from 'axios';\n\nexport const bookTour = async (tourId) => {\n  try {\n    // 1) Get checkout session from API + create checkout form\n    const session = await axios(`/api/v1/bookings/checkout-session/${tourId}`);\n\n    // 2) Redirect to checkout form\n    window.location.href = session.data.session.url;\n  } catch (err) {\n    console.log(err);\n    showAlert('error', err);\n  }\n};\n","import axios from 'axios';\nimport { showAlert } from './alerts';\n\nexport const signup = async (name, email, password, passwordConfirm) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      url: '/api/v1/users/signup',\n      data: { name, email, password, passwordConfirm },\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', 'Signed up successfully!');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1500);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../"}